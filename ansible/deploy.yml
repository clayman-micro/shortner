---

- hosts: localhost
  tasks:
    - name: Prepare folder for credentials
      file:
        path: "{{ inventory_dir }}/.credentials/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}/"
        state: directory
        mode: 0755
      with_items: "{{ groups['servers'] }}"

    - name: Download private keys for servers
      hashivault_read:
        mount_point: "secrets"
        secret: "nodes/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}"
        key: 'private_key'
        version: 2
      with_items: "{{ groups['servers'] }}"
      loop_control:
        label: "{{ item }}"
      register: 'private_keys'

    - name: Write private key to file
      copy:
        content: "{{ item.value }}"
        dest: "{{ inventory_dir }}/.credentials/{{ item.item }}/users/{{ hostvars[item.item]['ansible_user'] }}/id_rsa"
        mode: 0600
      with_items: "{{ private_keys.results }}"
      loop_control:
        label: "{{ item.item }}"


- hosts: servers
  become: true

  vars:
    consul_host: "consul.service.consul"
    consul_port: "8500"

    docker_registry: ghcr.io
    docker_username: "{{ lookup('hashivault', 'services/ghcr', 'user', mount_point='/secrets', version=2) }}"
    docker_password: "{{ lookup('hashivault', 'services/ghcr', 'password', mount_point='/secrets', version=2) }}"

    private_network: "{{ ansible_eth1['ipv4'] }}"

    shortner_domain: "short.{{ domain }}"
    shortner_sentry_dsn: "{{ lookup('hashivault', 'services/shortner', 'sentry_dsn', mount_point='/secrets', version=2) }}"

    shortner_image: ghcr.io/clayman-micro/shortner
    shortner_version: "{{ lookup('env','SHORTNER_VERSION')|default('latest') }}"

    shortner_replicas: 1

  tasks:
    - name: Log into private registry
      docker_login:
        registry: "{{ docker_registry }}"
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"

    - name: Pull image
      docker_image:
        name: "{{ shortner_image }}:{{ shortner_version }}"
        source: pull

    - name: Update service
      docker_swarm_service:
        name: shortner
        image: "{{ shortner_image }}:{{ shortner_version }}"
        command: python3 -m shortner server run
        args:
          - "--host=0.0.0.0"
          - "--tags={{ env }}"
          - "--tags={{ shortner_version }}"
          - "--tags=traefik.enable=true"
          - "--tags=traefik.http.routers.shortner.rule=Host(`{{ shortner_domain }}`)"
          - "--tags=traefik.http.routers.shortner.entrypoints=web"
          - "--tags=traefik.http.routers.shortner.service=shortner"
          - "--tags=traefik.http.routers.shortner.middlewares=shortner-redirect@consulcatalog"
          - "--tags=traefik.http.middlewares.shortner-redirect.redirectscheme.scheme=https"
          - "--tags=traefik.http.middlewares.shortner-redirect.redirectscheme.permanent=true"
          - "--tags=traefik.http.routers.shortner-secure.rule=Host(`{{ shortner_domain }}`)"
          - "--tags=traefik.http.routers.shortner-secure.entrypoints=websecure"
          - "--tags=traefik.http.routers.shortner-secure.service=shortner"
          - "--tags=traefik.http.routers.shortner-secure.tls=true"
          - "--tags=traefik.http.routers.shortner-secure.tls.certresolver=acmeresolver"
        dns:
          - "{{ private_network.address }}"
        env:
          CONSUL_HOST: "{{ consul_host }}"
          CONSUL_PORT: "{{ consul_port }}"
        logging:
          driver: syslog
          options:
            syslog-address: unixgram:///dev/log
            tag: shortner
        networks:
          - backend
        replicas: "{{ shortner_replicas|default(1) }}"
